base/
contient les fichiers qui définissent les fondations de votre site, par exemple la police de caractères et les normesque vous voulez appliquer sur tout votre site, telles que le box-sizing ;

utils/
, vous rangez vos variables, fonctions, mixins et les %placeholders pour les extensions (si vous en utilisez) ;

layouts/
est le dossier où vous mettez vos blocs BEM qui contiennent ce qui est réutilisable, par exemple un header pour les mises enpage de grande taille ou un footer ;

components/
est utilisé pour ranger les blocs BEM qui sont plus indépendants, comme les boutons. Alors que les layouts peuvent utiliser d’autres composants pour générer leurs contenus, les
composants , eux, sont plus élémentaires. Parexemple, un formulaire doit être considéré comme un layout : la mise en page est une fonction vitale du bloc et il utilise d’autres blocs pourfonctionner, comme des boutons. En revanche, le bouton lui-même est un composant car il n’a besoin d’aucun autre composant pour remplirsa fonction ;

pages/
contient les blocs de code qui ne s’appliquent qu’à une seule page. Vous utilisez des boutons dans tout votre site, en revanchevotre page d’accueil comporte une section Citation et une grille de projets qui ne sont employés nulle part ailleurs. En d’autres termes,pages/ contient des règles spécifiques à une seule page qui ne seront pas réutilisées ailleurs ;

themes/
, c’est ici que vous stockez le code thématique, par exemple un style customisé pour Noël ou pour l’été. On ne l’utilisera pasdans notre site ;

vendors/
est un directory pour des feuilles de style externes comme Bootstrap ou jQuery UI. En gros, il s’utilise pour tout CSS venantde l’extérieur. Utiliser des frameworks comme Bootstrap permet d’accélérer le développement d’un site, car ils contiennent des feuillesde style prédéfinies pour des choses comme les formulaires ou des boutons.